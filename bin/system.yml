


DEFAULT
    # System Preferences > Desktop & Screen Saver
    - domain: "ByHost/com.apple.screensaver.{{ uuid }}"
      settings:
        # Start after (dropdown)
        - { key: "idleTime", type: "int", value: "120" } # Default: key absent


        # Array interaction is currently broken :(
        # See: https://github.com/ansible/ansible-modules-extras/issues/2610
        # # Remove all apps (hidden)
        # - { key: "persistent-apps", type: "array", value: "[]" } # Default: [epic array]
        # # Add new apps (hidden)
        # - { key: "persistent-apps", type: "array", array_add: "true", value: "['<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Google Chrome.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>']" }
        # - { key: "persistent-apps", type: "array", array_add: "true", value: "['<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Spotify.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>']" }
        # - { key: "persistent-apps", type: "array", array_add: "true", value: "['<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Slack.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>']" }
        # - { key: "persistent-apps", type: "array", array_add: "true", value: "['<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Atom.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>']" }
        # - { key: "persistent-apps", type: "array", array_add: "true", value: "['<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/iTerm.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>']" }






      - domain: com.apple.driver.AppleBluetoothMultitouch.mouse
        settings:
          # Secondary click (checkbox)
          - { key: "MouseButtonMode", type: "string", value: "TwoButton" } # Default: `OneButton`

      # System Preferences > Trackpad
      - domain: com.apple.driver.AppleBluetoothMultitouch.trackpad
        settings:
          # Tap to click (checkbox)
          - { key: "Clicking", type: "int", value: "1" } # Default: `0`

      # System Preferences > Printers & Scanners
      - domain: "com.apple.print.PrintingPrefs"
        settings:
          # Automatically quit printer app once the print jobs complete (hidden)
          - { key: "Quit When Finished", type: "bool", value: "true" } # Default: file absent

      # System Preferences > Sharing
      - domain: "com.apple.NetworkBrowser"
        settings:
          # Enable AirDrop over ethernet
          - { key: "BrowseAllInterfaces", type: "bool", value: "true" } # Default: file absent

      # System Preferences > Time Machine
      - domain: "com.apple.TimeMachine"
        settings:
          # Prevent Time Machine from prompting to use new hard drives as backup volume
          - { key: "DoNotOfferNewDisksForBackup", type: "bool", value: "true" } # Default: key absent




      - domain: "com.apple.frameworks.diskimages"
        settings:
          # Disable disk image verification
          - { key: "skip-verify", type: "bool", value: "true" } # Default: file absent
          - { key: "skip-verify-locked", type: "bool", value: "true" } # Default: file absent
          - { key: "skip-verify-remote", type: "bool", value: "true" } # Default: file absent

      - domain: "com.apple.LaunchServices"
        settings:
          # Disable the “Are you sure you want to open this application?” dialog
          - { key: "LSQuarantine", type: "bool", value: "false" } # Default: file absent

      # Array interaction is currently broken :(
      # See: https://github.com/ansible/ansible-modules-extras/issues/2610
      # Menu bar
      # - domain: "com.apple.systemuiserver"
      #   settings:
      #     # Remove apps
      #     - { key: "menuExtras", type: "array", value: "[]" } # Default: [epic array]
      #     # Add apps
      #     - { key: "menuExtras", type: "array", array_add: "true", value: "['/System/Library/CoreServices/Menu Extras/Battery.menu']" }
      #     - { key: "menuExtras", type: "array", array_add: "true", value: "['/System/Library/CoreServices/Menu Extras/Bluetooth.menu']" }
      #     - { key: "menuExtras", type: "array", array_add: "true", value: "['/System/Library/CoreServices/Menu Extras/AirPort.menu']" }
      #     - { key: "menuExtras", type: "array", array_add: "true", value: "['/System/Library/CoreServices/Menu Extras/Volume.menu']" }

      # Finder
      - domain: "com.apple.finder"
        settings:
          # Show hidden files
          - { key: "AppleShowAllFiles", type: "string", value: "YES" } # Default: [unknown]
          # Show status bar
          - { key: "NewWindowTarget", type: "string", value: "PfHm" } # Default: key absent
          # Show status bar
          - { key: "ShowStatusBar", type: "bool", value: "true" } # Default: key absent
          # Disable the warning when changing a file extension
          - { key: "FXEnableExtensionChangeWarning", type: "bool", value: "false" } # Default: key absent
          # When performing a search, search the current folder by default
          - { key: "FXDefaultSearchScope", type: "string", value: "SCcf" } # Default: key absent
          # Use column view in all Finder windows by default
          - { key: "FXPreferredViewStyle", type: "string", value: "clmv" } # Default: `Nlsv`
          # Show status bar
          - { key: "FXPreferredGroupBy", type: "string", value: "Kind" } # Default: key absent
          # Allow text selection in Quick Look
          - { key: "QLEnableTextSelection", type: "bool", value: "true" } # Default: key absent
          # Show icons for hard drives, servers, and removable media on the desktop
          - { key: "ShowExternalHardDrivesOnDesktop", type: "bool", value: "true" } # Default: `1`
          - { key: "ShowHardDrivesOnDesktop", type: "bool", value: "true" } # Default: `0``
          - { key: "ShowMountedServersOnDesktop", type: "bool", value: "true" } # Default: key absent
          - { key: "ShowRemovableMediaOnDesktop", type: "bool", value: "true" } # `1``

      - domain: "com.apple.desktopservices"
        settings:
          # Avoid creating .DS_Store files on network volumes
          - { key: "DSDontWriteNetworkStores", type: "bool", value: "true" } # Default: key absent

          


  defaults_global:
    # Displays
    - domain: "/Library/Preferences/com.apple.iokit.AmbientLightSensor"
      settings:
        # Automatically adjust brightness
        - { key: "Automatic Display Enabled", type: "bool", value: "false" } # Default: [unknown]

  defaults_plistbuddy:
    # System Preferences > Desktop & Screen Saver
    - domain: "{{ home }}/Library/Preferences/ByHost/com.apple.screensaver.{{ uuid }}.plist"
      settings:
        # Arrange by
        - { key: "moduleDict:displayName", type: "string", value: "Aerial" } # Default: `Computer Name`
        - { key: "moduleDict:moduleName", type: "string", value: "Aerial" } # Default: `Computer Name`
        - { key: "moduleDict:path", type: "string", value: "{{ home }}/Library/Screen Savers/Aerial.saver" } # Default: `/System/Library/Frameworks/ScreenSaver.framework/Resources/Computer Name.saver`

    # System Preferences > Keyboard > Shortcuts > Spotlight
    - domain: "{{ home }}/Library/Preferences/com.apple.symbolichotkeys.plist"
      settings:
        # Uncheck `Show Spotlight search`
        - { key: "AppleSymbolicHotKeys:64:enabled", type: "bool", value: "false" }
        # Uncheck `Show Finder search window`
        - { key: "AppleSymbolicHotKeys:65:enabled", type: "bool", value: "false" }

    # Finder
    - domain: "{{ home }}/Library/Preferences/com.apple.finder.plist"
      settings:
        # Arrange by
        - { key: "DesktopViewSettings:IconViewSettings:arrangeBy", type: "string", value: "grid" } # Default: `none`
        - { key: "FK_StandardViewSettings:IconViewSettings:arrangeBy", type: "string", value: "grid" } # Default: `none`
        - { key: "StandardViewSettings:IconViewSettings:arrangeBy", type: "string", value: "grid" } # Default: `none`
        # Grid spacing
        - { key: "DesktopViewSettings:IconViewSettings:gridSpacing", type: "integer", value: "40" } # Default: `54`
        - { key: "FK_StandardViewSettings:IconViewSettings:gridSpacing", type: "integer", value: "40" } # Default: `54`
        - { key: "StandardViewSettings:IconViewSettings:gridSpacing", type: "integer", value: "40" } # Default: `54`
        # Icon size
        - { key: "DesktopViewSettings:IconViewSettings:iconSize", type: "integer", value: "44" } # Default: `64`
        - { key: "FK_StandardViewSettings:IconViewSettings:iconSize", type: "integer", value: "44" } # Default: `64`
        - { key: "StandardViewSettings:IconViewSettings:iconSize", type: "integer", value: "44" } # Default: `64`
        # Label on bottom
        - { key: "DesktopViewSettings:IconViewSettings:labelOnBottom", type: "bool", value: "false" } # Default: `1`
        - { key: "FK_StandardViewSettings:IconViewSettings:labelOnBottom", type: "bool", value: "false" } # Default: `1`
        - { key: "StandardViewSettings:IconViewSettings:labelOnBottom", type: "bool", value: "false" } # Default: `1`
        # Text size
        - { key: "DesktopViewSettings:IconViewSettings:textSize", type: "integer", value: "10" } # Default: `12`
        - { key: "FK_StandardViewSettings:IconViewSettings:textSize", type: "integer", value: "10" } # Default: `12`
        - { key: "StandardViewSettings:IconViewSettings:textSize", type: "integer", value: "10" } # Default: `12`

  # System Preferences > Security & Privacy > General > Allow apps downloaded from: Anywhere
  spctl_status: disable

  # System Preferences > Sharing > Computer Name
  computer_names:
    - { name: "ComputerName", value: "{{ user_name }}-macbook" }
    - { name: "LocalHostName", value: "{{ user_name }}-macbook" }
    - { name: "HostName", value: "{{ user_name }}-macbook.local" }

  # System Preferences > Energy Saver
  power_settings_all:
    - { name: "disksleep", value: "10" }
    - { name: "womp", value: "0" }
    - { name: "autorestart", value: "0" }
    - { name: "halfdim", value: "0" }
    - { name: "sms", value: "0" }

  # System Preferences > Energy Saver > Battery
  power_settings_battery:
    - { name: "displaysleep", value: "5" }
    - { name: "sleep", value: "10" }
    - { name: "powernap", value: "0" }
    - { name: "lessbright", value: "1" }

  # System Preferences > Energy Saver > Power Adaptor
  power_settings_charger:
    - { name: "displaysleep", value: "10" }
    - { name: "sleep", value: "0" }
    - { name: "powernap", value: "1" }
    - { name: "lessbright", value: "0" }



WRITE NEW

---
- name: write OSX defaults (user)
  osx_defaults:
    domain: "{{ item.0.domain }}"
    key: "{{ item.1.key }}"
    type: "{{ item.1.type }}"
    array_add: "{{ item.1.array_add | default(false) }}"
    value: "{{ item.1.value }}"
  with_subelements:
    - "{{ defaults }}"
    - settings

- name: write OSX defaults (sudo)
  become: yes
  osx_defaults:
    domain: "{{ item.0.domain }}"
    key: "{{ item.1.key }}"
    type: "{{ item.1.type }}"
    array_add: "{{ item.1.array_add | default(false) }}"
    value: "{{ item.1.value }}"
  with_subelements:
    - "{{ defaults_global }}"
    - settings

# Using `Delete` then `Add` with plistbuddy, as `Set` will fail if the key doesn't exist
- name: clear OSX defaults (plistbuddy)
  shell: "/usr/libexec/PlistBuddy -c 'Delete :{{ item.1.key }}' {{ item.0.domain }}"
  with_subelements:
    - "{{ defaults_plistbuddy }}"
    - settings
  register: plistbuddy_result
  failed_when: "plistbuddy_result.stderr and 'Does Not Exist' not in plistbuddy_result.stderr"

- name: set OSX defaults (plistbuddy)
  shell: "/usr/libexec/PlistBuddy -c 'Add :{{ item.1.key }} {{ item.1.type }} {{ item.1.value }}' {{ item.0.domain }}"
  with_subelements:
    - "{{ defaults_plistbuddy }}"
    - settings

- name: set OS X Gatekeeper
  become: yes
  shell: "spctl --master-{{ spctl_status }}"

- name: set computer name
  shell: "sudo scutil --set {{ item.name }} '{{ item.value }}'"
  with_items: "{{ computer_names }}"

- name: power settings (all)
  shell: "sudo pmset -a {{ item.name }} {{ item.value }}"
  with_items: "{{ power_settings_all }}"

- name: power settings (battery)
  shell: "sudo pmset -b {{ item.name }} {{ item.value }}"
  with_items: "{{ power_settings_battery }}"

- name: power settings (charger)
  shell: "sudo pmset -c {{ item.name }} {{ item.value }}"
  with_items: "{{ power_settings_charger }}"
